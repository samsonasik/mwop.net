<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/">
  <channel>
    <title>Tag: programming :: phly, boy, phly</title>
    <description>Tag: programming :: phly, boy, phly</description>
    <pubDate>Mon, 05 Jan 2009 07:00:49 +0000</pubDate>
    <generator>Zend_Feed_Writer 2.0.0beta5 (http://framework.zend.com)</generator>
    <link>http://mwop.net/blog/tag/programming.html</link>
    <atom:link rel="self" type="application/rss+xml" href="http://mwop.net/blog/tag/programming-rss.xml"/>
    <item>
      <title>2008: The year in review</title>
      <pubDate>Mon, 05 Jan 2009 07:00:49 +0000</pubDate>
      <link>http://mwop.net/blog/203-2008-The-year-in-review.html</link>
      <guid>http://mwop.net/blog/203-2008-The-year-in-review.html</guid>
      <author>me@mwop.net (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    That time of year again -- wrap-up time. Each year, it seems like it's the
    busiest ever, and I often wonder if it will ever slow down. As usual, I'm
    restricting myself to primarily professional activities out of respect for
    the privacy of my family.
</p>

<p>
    The short, executive summary:
</p>

<ul>
    <li>One trip to Israel</li>
    <li>One trip to The Netherlands</li>
    <li>One trip to California's Bay Area</li>
    <li>One trip to Atlanta, GA</li>
    <li>Three minor releases of Zend Framework</li>
    <li>Seven webinars, six for zend.com and one for Adobe</li>
    <li>Three conferences attended as a speaker, including:<ul>
         <li>One six-hour workshop</li>
         <li>One three-hour tutorial (as a co-presenter)</li>
         <li>Four regular sessions</li>
         <li>Two panel sessions (one scheduled, one for an uncon)</li>
         <li>Two uncon sessions (one as a co-presenter)</li>
         <li>One foul-mouthed Pecha Kucha talk</li>
    </ul></li>
    <li>Ten Burlington, VT PHP User's Group meetings attended; I spoke at
        many</li>
    <li>One Bug Hunt week organized</li>
    <li>Two books reviewed as a technical editor</li>
    <li>Six articles for <a href="http://devzone.zend.com/">DevZone</a></li>
    <li>50 blog entries (including this one)</li>
</ul>

<p>
    Read on for the gruesome, month-by-month breakdown.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Mumbles irssi integration</title>
      <pubDate>Fri, 12 Dec 2008 20:19:50 +0000</pubDate>
      <link>http://mwop.net/blog/197-Mumbles-irssi-integration.html</link>
      <guid>http://mwop.net/blog/197-Mumbles-irssi-integration.html</guid>
      <author>me@mwop.net (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    I've been using IRC regularly for the past six to nine months, in large part
    due to the growing ZF community on the 
    <a href="http://freenode.net/">Freenode</a> #zftalk channel (unfortunately,
    I simply don't have time to be in that particular channel any more, but you
    can generally find me in #zftalk.dev), but also to keep in contact with
    other peers, friends, and colleagues. 
</p>

<p>
    One difficulty, however, is keeping productivity high while staying on IRC.
    To me, the ultimate client would provide me notifications when somebody
    mentions my name or a watch word - allowing me to read the channel at my
    leisure, yet still respond to people in a timely fashion.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Vimgrep and Vim Project</title>
      <pubDate>Thu, 23 Oct 2008 01:55:03 +0000</pubDate>
      <link>http://mwop.net/blog/194-Vimgrep-and-Vim-Project.html</link>
      <guid>http://mwop.net/blog/194-Vimgrep-and-Vim-Project.html</guid>
      <author>me@mwop.net (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    Chris Hartjes today was <a href="http://www.littlehart.net/atthekeyboard/2008/10/20/vim-programming-bounty-fuzzyfind-inside-files/">on a quest for a "find in project" feature for Vim</a>.
    "Find in Project" was a feature of Textmate that he'd grown accustomed to
    and was having trouble finding an equivalent for.
</p>

<p>
    The funny thing is that Textmate is a newcomer, and, of course, vim has had
    such a feature for years. The thing to remember with vim, of course, is its
    unix roots; typically if you know the unix command for doing something, you
    can find what you need in vim. In this case, the key is the vimgrep plugin,
    which ships in the standard vim distribution.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>git-svn Tip: don't use core.autocrlf</title>
      <pubDate>Wed, 24 Sep 2008 16:16:27 +0000</pubDate>
      <link>http://mwop.net/blog/191-git-svn-Tip-dont-use-core.autocrlf.html</link>
      <guid>http://mwop.net/blog/191-git-svn-Tip-dont-use-core.autocrlf.html</guid>
      <author>me@mwop.net (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    I've been playing around with <a href="http://git.or.cz/">Git</a> in the 
    past couple months, and have been really enjoying it. Paired with
    subversion, I get the best of all worlds -- distributed source control when
    I want it (working on new features or trying out performance tuning), and
    non-distributed source control for my public commits.
</p>

<p>
    <a href="http://github.com/guides/dealing-with-newlines-in-git">Github</a> 
    suggests that when working with remote repositories, you turn on the
    autocrlf option, which ensures that changes in line endings do not get
    accounted for when pushing to and pulling from the remote repo.  However,
    when working with git-svn, this actually causes issues. After turning this
    option on, I started getting the error "Delta source ended unexpectedly"
    from git-svn. After a bunch of aimless tinkering, I finally asked myself the
    questions, "When did this start happening?" and, "Have I changed anything
    with Git lately?" Once I'd backed out the config change, all started working
    again.
</p>

<p>
    In summary: don't use "git config --global core.autocrlf true" when using
    git-svn.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Server Upgrades... lost entries...</title>
      <pubDate>Wed, 21 May 2008 18:35:27 +0000</pubDate>
      <link>http://mwop.net/blog/171-Server-Upgrades...-lost-entries....html</link>
      <guid>http://mwop.net/blog/171-Server-Upgrades...-lost-entries....html</guid>
      <author>me@mwop.net (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    My good friend, Rob, hosts my site for me, in return for helping with server
    maintenance. After being on Gentoo for the past three years, though, we
    decided it was time to switch to something a little easier to maintain, so
    last night we wiped the system partitions and installed Ubuntu server.
</p>

<p>
    I'll say this: the setup is much faster! However, we had a few gotchas that
    surprised us -- it didn't setup our RAID array out-of-the-box, which led to
    a good hour of frustration as we tried to verify that the install wouldn't
    wipe it, and then to verify that we could re-assemble it.  (We succeeded.)
    Additionally, we second-guessed a few things we shouldn't have, which led to
    needing to back out and reconfigure. But what was over a 12 hour install
    with Gentoo we accomplished in a matter of a few hours with Ubuntu server --
    so it was a huge success that way.
</p>

<p>
    Unfortunately, our mysqldump of all databases... wasn't, a fact we
    discovered only after importing it into the new system. I ended up losing my
    blog database and PEAR channel database. Fortunately, the PEAR channel
    has not changed at all in the past year, so we had an old backup that
    worked, and I had a snapshot of my blog database from three weeks ago I was
    able to use. As a result, there are a few missing entries, but for the most
    part, all works. If you commented on one of those missing entries, my
    apologies.
</p>

<p>
    Now that the install is done, I'm also finalizing some design changes to my
    blog -- it's time to leave the black and white for more colorful grounds.
    Look for a revamp in the coming weeks!
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Submitting Bug Reports</title>
      <pubDate>Sun, 09 Mar 2008 14:18:36 +0000</pubDate>
      <link>http://mwop.net/blog/161-Submitting-Bug-Reports.html</link>
      <guid>http://mwop.net/blog/161-Submitting-Bug-Reports.html</guid>
      <author>me@mwop.net (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    Full disclosure: I am employed by <a href="http://www.zend.com/">Zend</a> to
    program <a href="http://framework.zend.com/">Zend Framework</a>. That said,
    the following is all my opinion, and is based on my experiences with Zend
    Framework, as well as answering questions on a variety of mailing lists and
    with other OSS projects (PEAR, Solar, and Cgiapp in particular).
</p>

<p>
    One of my biggest pet peeves in the OSS world is vague bug/issue reports and feature requests. I
    cannot count the number of times I've seen a report similar to the following:
</p>

<blockquote>
    &lt;Feature X&gt; doesn't work; you need to fix it <b>now!</b>
</blockquote>

<p>
    If such a report comes in on an issue tracker, it's invariably marked
    critical and high priority.
</p>

<p>
    What bothers me about it? Simply this: it gives those responsible for
    maintaining Feature X absolutely no information to work on: what result they
    received, what was expected, or how exactly they were using the feature. The
    reviewer now has to go into one or more cycles with the reporter fishing for
    that information -- wasting everyone's time and energy.
</p>

<p>
    Only slightly better are these reports:
</p>

<blockquote>
    &lt;Feature X&gt; doesn't work -- I keep getting &lt;Result X&gt; from it,
    which is incorrect.
</blockquote>

<p>
    At least this tells the reviewers what they reporter is receiving... but it
    doesn't tell them how they got there, or what they're expecting.
</p>

<p>
    So, the following should be your mantra when reporting issues or making feature requests:
</p>

<ul>
    <li>What is the minimum code necessary to reproduce the issue or show the desired API?</li>
    <li>What is the expected result?</li>
    <li>What is the actual result?</li>
</ul>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Backwards Compatibility</title>
      <pubDate>Thu, 07 Feb 2008 14:56:11 +0000</pubDate>
      <link>http://mwop.net/blog/158-Backwards-Compatibility.html</link>
      <guid>http://mwop.net/blog/158-Backwards-Compatibility.html</guid>
      <author>me@mwop.net (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    <a href="http://jansch.nl/">Ivo</a> already pointed this out, but I want to
    point it out again: Boy Baukema writes 
    <a href="http://www.ibuildings.nl/blog/archives/541-Backward-compatibility,-bane-of-the-developer.html">a very nice entry regarding backwards compatibility</a>
    on the ibuildings.nl corporate blog.
</p>

<p>
    Backwards compatibility (BC) is a tricky thing to support, even when you
    strive hard to, as Boy puts it, "think hard about your API" prior to
    release. Somebody will always come along and point out ways it could have
    been done better or ways it could be improved. I've had to wrestle with
    these issues a ton since joining the Zend Framework team, and while it often
    feels like the wrong thing to do to tell somebody, "too little, too late"
    when they have genuinely good feedback for you, its often in the best
    interest of the many users already using a component.
</p>

<p>
    I had the pleasure of meeting Boy last year when visiting the ibuildings.nl
    offices, and he's got a good head on his shoulders. He does a nice job
    outlining the issues and a number of approaches to BC; if you develop a
    project for public consumption, you should definitely head over and read
    what he has to say.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>Apache HOSTNAME on Clusters</title>
      <pubDate>Sat, 26 Jan 2008 13:22:44 +0000</pubDate>
      <link>http://mwop.net/blog/156-Apache-HOSTNAME-on-Clusters.html</link>
      <guid>http://mwop.net/blog/156-Apache-HOSTNAME-on-Clusters.html</guid>
      <author>me@mwop.net (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    In an effort to debug issues on a cluster, I was trying to determine which
    machine on the cluster was causing the issue. My idea was that I could
    insert a header token identifying the server.
</p>

<p>
    My first idea was to add the directive 'Header add X-Server-Ip
    "%{SERVER_ADDR}e" in my httpd.conf. However, due to the nature of our load
    balancer, Apache was somehow resolving this to the load balancer IP address
    on all machines of the cluster -- which was really, really not useful.
</p>

<p>
    I finally stumbled on a good solution, however: you can set environment
    variables in apachectl, and then pass them into the Apache environment using
    the PassEnv directive from mod_env; once that's done, you can use the
    environment variable anywhere.
</p>

<p>
    In my apachectl, I added the line "export HOSTNAME=`hostname`". Then, in my
    httpd.conf, I added first the line "PassEnv HOSTNAME", followed by the
    directive 'Header add X-Server-Name "%{HOSTNAME}e"'. Voila! I now had the
    hostname in the header, which gave me the information I needed for
    debugging.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>2007 Retrospective</title>
      <pubDate>Thu, 03 Jan 2008 11:22:35 +0000</pubDate>
      <link>http://mwop.net/blog/154-2007-Retrospective.html</link>
      <guid>http://mwop.net/blog/154-2007-Retrospective.html</guid>
      <author>me@mwop.net (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    2007 was a busy year, both personally and professionally. I won't go into
    the personal too much, because, well, it's personal, and some of the details
    are simply inappropriate for blogging material.
</p>

<p>
    Here's the short version:
</p>

<ul>
    <li>One trip to Belgium and The Netherlands.</li>
    <li>Two trips to Israel.</li>
    <li>Two trips to Atlanta, GA (not counting the return trip from Europe, when
    I was stranded for a day due to storms in the Northeast).</li>
    <li>Three different user groups attended, with three presentations.</li>
    <li>One major Zend Framework release</li>
    <li>One PEAR release.</li>
    <li>One podcast.</li>
    <li>One webinar.</li>
    <li>One book published.</li>
    <li>One conference attended.</li>
</ul>

<p>
    What follows is my month-by-month breakdown:
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
    <item>
      <title>svn:externals</title>
      <pubDate>Wed, 10 Jan 2007 19:08:35 +0000</pubDate>
      <link>http://mwop.net/blog/132-svnexternals.html</link>
      <guid>http://mwop.net/blog/132-svnexternals.html</guid>
      <author>me@mwop.net (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    I was recently working with someone who was using Zend Framework in their
    project. To keep things stable and releasable, he was doing an export of
    framework into his repository and checking it in. Since files change so much
    in the ZF project currently, instead of doing an rsync from a checkout into
    his own repository, he decided instead to delete the directory from the
    repository and re-add it everytime he was updating framework.
</p>
<p>
    This seemed really inefficient to me, especially considering that it made it
    incredibly difficult to merge changes from his development branch into his
    production branch (deleting and re-adding directories breaks the merge
    process considerably). I knew there had to be a better way.
</p>
<p>
    I'd heard of the svn:externals property before, but never really played with
    it. As it turns out, it exists for just this very type of situation. The
    problem is that the 
    <a href="http://svnbook.red-bean.com/nightly/en/svn-book.html#svn.advanced.externals">documentation of svn:externals</a> 
    in the SVN book doesn't indicate at all how the property should be set, and
    most howto's I've read omit one or more very important details. I finally
    figured things out through some trial and error of my own, so I'm going to
    share the process so others hopefully can learn from the experience as well.
</p>
<p>
    It's actually pretty easy. This assumes that your project layout looks
    something like this:
</p>
<pre>
project/
    branch/
        production/
    tag/
    trunk/
</pre>
<ul>
    <li>In the top of your project trunk, execute the following:
<pre>
svn propedit svn:externals .
</pre>
    </li>
    <li>This will open an editor session. In the file opened by your editor,
    each line indicates a different external svn repo to pull. The first segment
    of the line is the directory where you want the pull to exist. The last
    segment is the svn repo URL to pull. You can have an optional middle
    argument indicating the revision to use. Some examples:
    <ul>
        <li>Pull framework repo from head:
<pre>
framework http://framework.zend.com/svn/framework/trunk
</pre>
        </li>
        <li>Pull framework repo from revision 2616:
<pre>
framework -r2616 http://framework.zend.com/svn/framework/trunk
</pre>
        </li>
    </ul>
    <li>After saving and exiting, update the repo:
<pre>
svn up
</pre>
    </li>
    <li>Commit changes:
<pre>
svn commit
</pre>
    </li>
</ul>
<p>
    One thing to note: any directory you specify for an svn:externals checkout
    should <b>not</b> already exist in your repository. If it does, you will get
    an error like the following:
</p>
<pre>
svn: Working copy 'sharedproject' locked
svn: run 'svn cleanup' to remove locks
</pre>
<p>
    I show using revisions above; you could also pin to tags by simply checkout
    the external repository from a given tag. Either way works well.
</p>
<p>
    Then, when moving from one branch to another, or from the trunk to a branch,
    you simply set a different svn:externals for each branch. For instance, your
    current production might check from one particular revision, but your trunk
    might simply track head; you then simply determine what the current revision
    being used is on your trunk, and update svn:externals in your production
    branch when you're ready to push changes in.
</p>
<p>
    Hope this helps some of you out there!
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
  </channel>
</rss>
