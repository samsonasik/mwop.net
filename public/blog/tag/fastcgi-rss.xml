<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/">
  <channel>
    <title>Tag: fastcgi :: phly, boy, phly</title>
    <description>Tag: fastcgi :: phly, boy, phly</description>
    <pubDate>Sun, 15 Aug 2010 13:40:29 +0000</pubDate>
    <generator>Zend_Feed_Writer 2.0.0beta5 (http://framework.zend.com)</generator>
    <link>http://mwop.net/blog/tag/fastcgi.html</link>
    <atom:link rel="self" type="application/rss+xml" href="http://mwop.net/blog/tag/fastcgi-rss.xml"/>
    <item>
      <title>Running mod_php and FastCGI side-by-side</title>
      <pubDate>Sun, 15 Aug 2010 13:40:29 +0000</pubDate>
      <link>http://mwop.net/blog/243-Running-mod_php-and-FastCGI-side-by-side.html</link>
      <guid>http://mwop.net/blog/243-Running-mod_php-and-FastCGI-side-by-side.html</guid>
      <author>me@mwop.net (Matthew Weier O'Phinney)</author>
      <dc:creator>Matthew Weier O'Phinney</dc:creator>
      <content:encoded><![CDATA[<p>
    Because we're in full throes of <a href="http://framework.zend.com">Zend
        Framework</a> 2.0 development, I find myself with a variety of PHP
    binaries floating around my system from both the PHP 5.2 and 5.3 release
    series. We're at a point now where I'm wanting to test migrating
    applications from ZF 1.X to 2.0 to se see what works and what doesn't. But
    that means I need more than one PHP binary enabled on my server...
</p>

<p>
    I use <a href="http://www.zend.com/products/server/">Zend Server</a> on my
    development box; it's easy to install, and uses my native Ubuntu update
    manager to get updates. On Ubuntu, it installs the Debian Apache2 packages,
    so I get the added bonus of familiarity with the configuration structure.
</p>

<p>
    I installed Zend Server some time ago, so I'm still on a PHP 5.2 mod_php
    binary. I have several PHP 5.3 binaries compiled and installed locally for
    running unit tests and sample scripts already -- so the question was how to
    keep my 5.2 mod_php running while simultaneously allowing the ability to run
    selected vhosts in 5.3?
</p>

<p>
    The answer can be summed up in one acronym: FastCGI.
</p>]]></content:encoded>
      <slash:comments>0</slash:comments>
    </item>
  </channel>
</rss>
