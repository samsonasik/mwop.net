<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Tag: pear :: phly, boy, phly</title>
  <updated>2010-08-21T17:37:14-05:00</updated>
  <generator uri="http://framework.zend.com" version="2.0.0beta3">Zend_Feed_Writer</generator>
  <link rel="alternate" type="text/html" href="http://mwop.net/blog/tag/pear.html"/>
  <link rel="self" type="application/atom+xml" href="http://mwop.net/blog/tag/pear-atom.xml"/>
  <id>http://mwop.net/blog/tag/pear.html</id>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[Autoloading Benchmarks]]></title>
    <published>2010-08-17T08:30:00-05:00</published>
    <updated>2010-08-21T17:37:14-05:00</updated>
    <link rel="alternate" type="text/html" href="http://mwop.net/blog/245-Autoloading-Benchmarks.html"/>
    <id>http://mwop.net/blog/245-Autoloading-Benchmarks.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>me@mwop.net</email>
      <uri>http://mwop.net</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>During the past week, I've been looking at different strategies
for <xhtml:a href="http://php.net/autoload">autoloading</xhtml:a> in <xhtml:a href="http://framework.zend.com/">Zend Framework</xhtml:a>. I've suspected for
some time that our class loading strategy might be one source of
performance degradation, and wanted to research some different
approaches, and compare performance.</xhtml:p>
<xhtml:p>In this post, I'll outline the approaches I've tried, the
benchmarking stategy I applied, and the results of benchmarking
each approach.</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[2007 Retrospective]]></title>
    <published>2008-01-01T15:49:26-06:00</published>
    <updated>2008-01-03T05:22:35-06:00</updated>
    <link rel="alternate" type="text/html" href="http://mwop.net/blog/154-2007-Retrospective.html"/>
    <id>http://mwop.net/blog/154-2007-Retrospective.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>me@mwop.net</email>
      <uri>http://mwop.net</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>2007 was a busy year, both personally and professionally. I
won't go into the personal too much, because, well, it's personal,
and some of the details are simply inappropriate for blogging
material.</xhtml:p>
<xhtml:p>Here's the short version:</xhtml:p>
<xhtml:ul>
<xhtml:li>One trip to Belgium and The Netherlands.</xhtml:li>
<xhtml:li>Two trips to Israel.</xhtml:li>
<xhtml:li>Two trips to Atlanta, GA (not counting the return trip from
Europe, when I was stranded for a day due to storms in the
Northeast).</xhtml:li>
<xhtml:li>Three different user groups attended, with three
presentations.</xhtml:li>
<xhtml:li>One major Zend Framework release</xhtml:li>
<xhtml:li>One PEAR release.</xhtml:li>
<xhtml:li>One podcast.</xhtml:li>
<xhtml:li>One webinar.</xhtml:li>
<xhtml:li>One book published.</xhtml:li>
<xhtml:li>One conference attended.</xhtml:li>
</xhtml:ul>
<xhtml:p>What follows is my month-by-month breakdown:</xhtml:p>
</xhtml:div>
    </content>
  </entry>
  <entry xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title type="html"><![CDATA[File_Fortune refactored]]></title>
    <published>2007-07-05T16:26:00-05:00</published>
    <updated>2007-07-10T07:34:52-05:00</updated>
    <link rel="alternate" type="text/html" href="http://mwop.net/blog/142-File_Fortune-refactored.html"/>
    <id>http://mwop.net/blog/142-File_Fortune-refactored.html</id>
    <author>
      <name>Matthew Weier O'Phinney</name>
      <email>me@mwop.net</email>
      <uri>http://mwop.net</uri>
    </author>
    <content xmlns:xhtml="http://www.w3.org/1999/xhtml" type="xhtml">
      <xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml"><xhtml:p>Over the past few evenings, I've refactored <xhtml:a href="http://pear.php.net/trackback/trackback.php?id=File_Fortune">File_Fortune</xhtml:a>
to have it implement Iterator, Countable, and ArrayAccess --
basically allowing it to act like an array for most intents and
purposes. As a result, I've eliminated the need for the
<xhtml:kbd>File_Fortune_Writer</xhtml:kbd> package, and greatly simplified the
usage.</xhtml:p>
<xhtml:p>(Note: sure, File_Fortune may not be that big of a deal, but
over 1000 downloads in the past two years indicates
<xhtml:em>somebody</xhtml:em> is using it. Plus, it powers the random quotes on
the family website. :-) )</xhtml:p>
<xhtml:p>As some examples:</xhtml:p>
<xhtml:div class="example">
<xhtml:pre>
<xhtml:code lang="php" xml:lang="php">
require_once 'File/Fortune.php';

// Initialize and point it to a directory of fortunes
$fortunes = new File_Fortune('/path/to/fortunedir');

// Retrieve a random fortune 
// (works with either a directory or a single fortune file)
echo $fortunes-&gt;getRandom();

// Set to a specific fortune file:
$fortunes-&gt;setFile('myfortunes');

// Loop through and print all fortunes
foreach ($fortunes as $fortune) {
    echo str_repeat('-', 72), \"\n\", $fortune, \"\n\n\";
}

// Hmmm.. let's change one:
$fortunes[7] = \"I never really liked that fortune anyways.\";

// No need to explicitly save, as it's done during __destruct(), 
// but if you really want to:
$fortunes-&gt;save();

// Let's add a new fortune:
$fortunes-&gt;add('This is a shiny new fortune!');

// and now we'll verify it exists:
$index = count($fortunes) - 1;
echo $fortunes[$index];
</xhtml:code>
</xhtml:pre></xhtml:div>
<xhtml:p>All-in-all, it's a much better interface. Lesson learned: when
porting code from other languages, it pays to take some time and
determine if there might be a better API in your own.</xhtml:p>
<xhtml:p>In upcoming releases, I hope to modify the backend to use PHP's
Streams API instead of direct file access, and also to allow
providing a list of fortune files explicitly. After that, I should
be ready for the initial stable release.</xhtml:p>
<xhtml:p><xhtml:b>Update (2007-07-10): fixed parse error in examples</xhtml:b></xhtml:p>
</xhtml:div>
    </content>
  </entry>
</feed>
